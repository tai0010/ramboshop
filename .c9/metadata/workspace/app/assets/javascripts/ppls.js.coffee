{"filter":false,"title":"ppls.js.coffee","tooltip":"/app/assets/javascripts/ppls.js.coffee","undoManager":{"mark":31,"position":31,"stack":[[{"start":{"row":3,"column":0},"end":{"row":13,"column":24},"action":"insert","lines":["$ ->","  $('.tags_with_autocomplete').autocomplete","    minLength: 2","    source: (request, response) ->","      $.ajax","        url: $('.tags_with_autocomplete').data('autocompleteurl')","        dataType: \"json\"","        data:","          name: request.term","        success: (data) ->","          response(data)"],"id":2}],[{"start":{"row":3,"column":0},"end":{"row":13,"column":24},"action":"remove","lines":["$ ->","  $('.tags_with_autocomplete').autocomplete","    minLength: 2","    source: (request, response) ->","      $.ajax","        url: $('.tags_with_autocomplete').data('autocompleteurl')","        dataType: \"json\"","        data:","          name: request.term","        success: (data) ->","          response(data)"],"id":3}],[{"start":{"row":3,"column":0},"end":{"row":28,"column":2},"action":"insert","lines":["// Automatically put focus on first item in drop-down list","$('input[data-autocomplete]').autocomplete({ autoFocus: true });"," ","// Bind a new function to the autocomplete change event.  If   ","// the \"base\" rails3-jquery-autocomplete also has a change event, ","// that code will execute as well. ","$('input[data-autocomplete]').bind('autocompletechange', function(event, ui) {","  // rails3-jquery-autocomplete fills in ui.item with selected","  // value, or sets it to null if no value selected.","  if(!ui.item) {            // if nothing selected","    $(this).val('');        // clear this field's value","    clearDataValues(this);  // clear values in \"id\" and \"update_elements\" fields","  }","});"," ","function clearDataValues(autocompleteField) {","  if ($(autocompleteField).attr('data-id-element')) {      // data-id-element found","    $($(autocompleteField).attr('data-id-element')).val('');","  }","  if ($(autocompleteField).attr('data-update-elements')) { // data-update-elements found","    $.each( $(autocompleteField).data('update-elements'),function(k, v) { ","      // alert('key='+ k + ' value=' + v);","      $(v).val('');","    })","  }","};"],"id":4}],[{"start":{"row":2,"column":46},"end":{"row":2,"column":48},"action":"remove","lines":["//"],"id":9},{"start":{"row":2,"column":46},"end":{"row":2,"column":47},"action":"insert","lines":["#"]}],[{"start":{"row":3,"column":0},"end":{"row":3,"column":2},"action":"remove","lines":["//"],"id":10},{"start":{"row":3,"column":0},"end":{"row":3,"column":1},"action":"insert","lines":["#"]}],[{"start":{"row":6,"column":0},"end":{"row":6,"column":2},"action":"remove","lines":["//"],"id":11},{"start":{"row":6,"column":0},"end":{"row":6,"column":1},"action":"insert","lines":["#"]}],[{"start":{"row":7,"column":0},"end":{"row":7,"column":2},"action":"remove","lines":["//"],"id":12},{"start":{"row":7,"column":0},"end":{"row":7,"column":1},"action":"insert","lines":["#"]}],[{"start":{"row":8,"column":0},"end":{"row":8,"column":2},"action":"remove","lines":["//"],"id":13},{"start":{"row":8,"column":0},"end":{"row":8,"column":1},"action":"insert","lines":["#"]}],[{"start":{"row":10,"column":2},"end":{"row":10,"column":4},"action":"remove","lines":["//"],"id":14},{"start":{"row":10,"column":2},"end":{"row":10,"column":3},"action":"insert","lines":["#"]}],[{"start":{"row":11,"column":2},"end":{"row":11,"column":4},"action":"remove","lines":["//"],"id":15},{"start":{"row":11,"column":2},"end":{"row":11,"column":3},"action":"insert","lines":["#"]}],[{"start":{"row":12,"column":28},"end":{"row":12,"column":30},"action":"remove","lines":["//"],"id":16},{"start":{"row":12,"column":28},"end":{"row":12,"column":29},"action":"insert","lines":["#"]}],[{"start":{"row":13,"column":28},"end":{"row":13,"column":30},"action":"remove","lines":["//"],"id":17},{"start":{"row":13,"column":28},"end":{"row":13,"column":29},"action":"insert","lines":["#"]}],[{"start":{"row":14,"column":28},"end":{"row":14,"column":30},"action":"remove","lines":["//"],"id":18},{"start":{"row":14,"column":28},"end":{"row":14,"column":29},"action":"insert","lines":["#"]}],[{"start":{"row":19,"column":59},"end":{"row":19,"column":61},"action":"remove","lines":["//"],"id":19},{"start":{"row":19,"column":59},"end":{"row":19,"column":60},"action":"insert","lines":["#"]}],[{"start":{"row":22,"column":59},"end":{"row":22,"column":61},"action":"remove","lines":["//"],"id":20},{"start":{"row":22,"column":59},"end":{"row":22,"column":60},"action":"insert","lines":["#"]}],[{"start":{"row":24,"column":6},"end":{"row":24,"column":8},"action":"remove","lines":["//"],"id":21},{"start":{"row":24,"column":6},"end":{"row":24,"column":7},"action":"insert","lines":["#"]}],[{"start":{"row":4,"column":0},"end":{"row":28,"column":2},"action":"remove","lines":["$('input[data-autocomplete]').autocomplete({ autoFocus: true });"," ","# Bind a new function to the autocomplete change event.  If   ","# the \"base\" rails3-jquery-autocomplete also has a change event, ","# that code will execute as well. ","$('input[data-autocomplete]').bind('autocompletechange', function(event, ui) {","  # rails3-jquery-autocomplete fills in ui.item with selected","  # value, or sets it to null if no value selected.","  if(!ui.item) {            # if nothing selected","    $(this).val('');        # clear this field's value","    clearDataValues(this);  # clear values in \"id\" and \"update_elements\" fields","  }","});"," ","function clearDataValues(autocompleteField) {","  if ($(autocompleteField).attr('data-id-element')) {      # data-id-element found","    $($(autocompleteField).attr('data-id-element')).val('');","  }","  if ($(autocompleteField).attr('data-update-elements')) { # data-update-elements found","    $.each( $(autocompleteField).data('update-elements'),function(k, v) { ","      # alert('key='+ k + ' value=' + v);","      $(v).val('');","    })","  }","};"],"id":22}],[{"start":{"row":4,"column":0},"end":{"row":28,"column":2},"action":"insert","lines":["$('input[data-autocomplete]').autocomplete({ autoFocus: true });"," ","# Bind a new function to the autocomplete change event.  If   ","# the \"base\" rails3-jquery-autocomplete also has a change event, ","# that code will execute as well. ","$('input[data-autocomplete]').bind('autocompletechange', function(event, ui) {","  # rails3-jquery-autocomplete fills in ui.item with selected","  # value, or sets it to null if no value selected.","  if(!ui.item) {            # if nothing selected","    $(this).val('');        # clear this field's value","    clearDataValues(this);  # clear values in \"id\" and \"update_elements\" fields","  }","});"," ","function clearDataValues(autocompleteField) {","  if ($(autocompleteField).attr('data-id-element')) {      # data-id-element found","    $($(autocompleteField).attr('data-id-element')).val('');","  }","  if ($(autocompleteField).attr('data-update-elements')) { # data-update-elements found","    $.each( $(autocompleteField).data('update-elements'),function(k, v) { ","      # alert('key='+ k + ' value=' + v);","      $(v).val('');","    })","  }","};"],"id":23}],[{"start":{"row":9,"column":57},"end":{"row":9,"column":65},"action":"remove","lines":["function"],"id":24},{"start":{"row":9,"column":57},"end":{"row":9,"column":58},"action":"insert","lines":["đ"]}],[{"start":{"row":9,"column":57},"end":{"row":9,"column":58},"action":"remove","lines":["đ"],"id":25}],[{"start":{"row":9,"column":57},"end":{"row":9,"column":58},"action":"insert","lines":["$"],"id":26}],[{"start":{"row":9,"column":58},"end":{"row":9,"column":59},"action":"insert","lines":[" "],"id":27}],[{"start":{"row":9,"column":59},"end":{"row":9,"column":60},"action":"insert","lines":["-"],"id":28}],[{"start":{"row":9,"column":60},"end":{"row":9,"column":61},"action":"insert","lines":[">"],"id":29}],[{"start":{"row":9,"column":61},"end":{"row":9,"column":62},"action":"insert","lines":[" "],"id":30}],[{"start":{"row":9,"column":57},"end":{"row":9,"column":61},"action":"remove","lines":["$ ->"],"id":31}],[{"start":{"row":9,"column":58},"end":{"row":9,"column":62},"action":"insert","lines":["$ ->"],"id":32}],[{"start":{"row":18,"column":0},"end":{"row":18,"column":8},"action":"remove","lines":["function"],"id":33},{"start":{"row":18,"column":0},"end":{"row":18,"column":4},"action":"insert","lines":["$ ->"]}],[{"start":{"row":23,"column":57},"end":{"row":23,"column":65},"action":"remove","lines":["function"],"id":34},{"start":{"row":23,"column":57},"end":{"row":23,"column":61},"action":"insert","lines":["$ ->"]}],[{"start":{"row":4,"column":0},"end":{"row":28,"column":2},"action":"remove","lines":["$('input[data-autocomplete]').autocomplete({ autoFocus: true });"," ","# Bind a new function to the autocomplete change event.  If   ","# the \"base\" rails3-jquery-autocomplete also has a change event, ","# that code will execute as well. ","$('input[data-autocomplete]').bind('autocompletechange',  $ ->(event, ui) {","  # rails3-jquery-autocomplete fills in ui.item with selected","  # value, or sets it to null if no value selected.","  if(!ui.item) {            # if nothing selected","    $(this).val('');        # clear this field's value","    clearDataValues(this);  # clear values in \"id\" and \"update_elements\" fields","  }","});"," ","$ -> clearDataValues(autocompleteField) {","  if ($(autocompleteField).attr('data-id-element')) {      # data-id-element found","    $($(autocompleteField).attr('data-id-element')).val('');","  }","  if ($(autocompleteField).attr('data-update-elements')) { # data-update-elements found","    $.each( $(autocompleteField).data('update-elements'),$ ->(k, v) { ","      # alert('key='+ k + ' value=' + v);","      $(v).val('');","    })","  }","};"],"id":35}],[{"start":{"row":4,"column":0},"end":{"row":28,"column":2},"action":"insert","lines":["$('input[data-autocomplete]').autocomplete({ autoFocus: true });"," ","# Bind a new function to the autocomplete change event.  If   ","# the \"base\" rails3-jquery-autocomplete also has a change event, ","# that code will execute as well. ","$('input[data-autocomplete]').bind('autocompletechange',  $ ->(event, ui) {","  # rails3-jquery-autocomplete fills in ui.item with selected","  # value, or sets it to null if no value selected.","  if(!ui.item) {            # if nothing selected","    $(this).val('');        # clear this field's value","    clearDataValues(this);  # clear values in \"id\" and \"update_elements\" fields","  }","});"," ","$ -> clearDataValues(autocompleteField) {","  if ($(autocompleteField).attr('data-id-element')) {      # data-id-element found","    $($(autocompleteField).attr('data-id-element')).val('');","  }","  if ($(autocompleteField).attr('data-update-elements')) { # data-update-elements found","    $.each( $(autocompleteField).data('update-elements'),$ ->(k, v) { ","      # alert('key='+ k + ' value=' + v);","      $(v).val('');","    })","  }","};"],"id":36}],[{"start":{"row":4,"column":0},"end":{"row":28,"column":2},"action":"remove","lines":["$('input[data-autocomplete]').autocomplete({ autoFocus: true });"," ","# Bind a new function to the autocomplete change event.  If   ","# the \"base\" rails3-jquery-autocomplete also has a change event, ","# that code will execute as well. ","$('input[data-autocomplete]').bind('autocompletechange',  $ ->(event, ui) {","  # rails3-jquery-autocomplete fills in ui.item with selected","  # value, or sets it to null if no value selected.","  if(!ui.item) {            # if nothing selected","    $(this).val('');        # clear this field's value","    clearDataValues(this);  # clear values in \"id\" and \"update_elements\" fields","  }","});"," ","$ -> clearDataValues(autocompleteField) {","  if ($(autocompleteField).attr('data-id-element')) {      # data-id-element found","    $($(autocompleteField).attr('data-id-element')).val('');","  }","  if ($(autocompleteField).attr('data-update-elements')) { # data-update-elements found","    $.each( $(autocompleteField).data('update-elements'),$ ->(k, v) { ","      # alert('key='+ k + ' value=' + v);","      $(v).val('');","    })","  }","};"],"id":37}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":4,"column":0},"end":{"row":4,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1434985210182,"hash":"6613c832743e12ee2ea7fa390e94fe5840cfd3bd"}